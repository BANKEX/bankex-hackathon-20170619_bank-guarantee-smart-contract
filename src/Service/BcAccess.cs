using Renci.SshNet;
using System;
using System.Diagnostics;

namespace BcIntegration
{
    public class BcAccess
    {
        string userName = "deathys";
        string pass = "12345";
        string hostUrl = "138.201.93.171";
        //string hostUrl = "localhost";

        string acc1 = "0x325ceb662289517a27208cbd6ab26c85653d586d";
        string acc2 = "0x43237303da3e105f8182718df9b80fb71195cdee";

        string guaranteeAbiDef = @"[{""constant"":true,""inputs"":[],""name"":""guarantee"",""outputs"":[{""name"":"""",""type"":""bytes32""}],""payable"":false,""type"":""function""},{""constant"":false,""inputs"":[],""name"":""GetGuarantee"",""outputs"":[{""name"":""guarantee"",""type"":""bytes32""}],""payable"":false,""type"":""function""},{""constant"":true,""inputs"":[],""name"":""risk"",""outputs"":[{""name"":"""",""type"":""string""}],""payable"":false,""type"":""function""},{""constant"":false,""inputs"":[{""name"":""_risk"",""type"":""string""}],""name"":""SetRisk"",""outputs"":[],""payable"":false,""type"":""function""},{""constant"":true,""inputs"":[],""name"":""tender"",""outputs"":[{""name"":"""",""type"":""string""}],""payable"":false,""type"":""function""},{""constant"":false,""inputs"":[{""name"":""_bank"",""type"":""string""},{""name"":""_amount"",""type"":""string""}],""name"":""SetPaymentInfo"",""outputs"":[],""payable"":false,""type"":""function""},{""constant"":true,""inputs"":[],""name"":""bank"",""outputs"":[{""name"":"""",""type"":""string""}],""payable"":false,""type"":""function""},{""constant"":true,""inputs"":[],""name"":""amount"",""outputs"":[{""name"":"""",""type"":""string""}],""payable"":false,""type"":""function""},{""constant"":true,""inputs"":[],""name"":""conditions"",""outputs"":[{""name"":"""",""type"":""string""}],""payable"":false,""type"":""function""},{""inputs"":[{""name"":""_tender"",""type"":""string""},{""name"":""_conditions"",""type"":""string""}],""payable"":false,""type"":""constructor""}]";
        string guaranteeByteCode = @"0x6060604052341561000c57fe5b604051610c89380380610c89833981016040528080518201919060200180518201919050505b81600190805190602001906100489291906100a9565b50806002908051906020019061005f9291906100a9565b5033600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505061014e565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100ea57805160ff1916838001178555610118565b82800160010185558215610118579182015b828111156101175782518255916020019190600101906100fc565b5b5090506101259190610129565b5090565b61014b91905b8082111561014757600081600090555060010161012f565b5090565b90565b610b2c8061015d6000396000f30060606040523615610097576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063263c4b53146100995780633ceb0c00146100c7578063426a0c88146100f55780635a2411451461018e5780636cb55d1a146101e8578063756a2f001461028157806376cdb03b1461031e578063aa8c217c146103b7578063e35c59d014610450575bfe5b34156100a157fe5b6100a96104e9565b60405180826000191660001916815260200191505060405180910390f35b34156100cf57fe5b6100d76104ef565b60405180826000191660001916815260200191505060405180910390f35b34156100fd57fe5b6101056106f7565b6040518080602001828103825283818151815260200191508051906020019080838360008314610154575b80518252602083111561015457602082019150602081019050602083039250610130565b505050905090810190601f1680156101805780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561019657fe5b6101e6600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610795565b005b34156101f057fe5b6101f86107b0565b6040518080602001828103825283818151815260200191508051906020019080838360008314610247575b80518252602083111561024757602082019150602081019050602083039250610223565b505050905090810190601f1680156102735780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561028957fe5b61031c600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190505061084e565b005b341561032657fe5b61032e610881565b604051808060200182810382528381815181526020019150805190602001908083836000831461037d575b80518252602083111561037d57602082019150602081019050602083039250610359565b505050905090810190601f1680156103a95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156103bf57fe5b6103c761091f565b6040518080602001828103825283818151815260200191508051906020019080838360008314610416575b805182526020831115610416576020820191506020810190506020830392506103f2565b505050905090810190601f1680156104425780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561045857fe5b6104606109bd565b60405180806020018281038252838181518152602001915080519060200190808383600083146104af575b8051825260208311156104af5760208201915060208101905060208303925061048b565b505050905090810190601f1680156104db5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60065481565b600060026001600260036004600560006040516020015260405180868054600181600116156101000203166002900480156105615780601f1061053f576101008083540402835291820191610561565b820191906000526020600020905b81548152906001019060200180831161054d575b5050858054600181600116156101000203166002900480156105ba5780601f106105985761010080835404028352918201916105ba565b820191906000526020600020905b8154815290600101906020018083116105a6575b5050848054600181600116156101000203166002900480156106135780601f106105f1576101008083540402835291820191610613565b820191906000526020600020905b8154815290600101906020018083116105ff575b50508380546001816001161561010002031660029004801561066c5780601f1061064a57610100808354040283529182019161066c565b820191906000526020600020905b815481529060010190602001808311610658575b5050828054600181600116156101000203166002900480156106c55780601f106106a35761010080835404028352918201916106c5565b820191906000526020600020905b8154815290600101906020018083116106b1575b50509550505050505060206040518083038160008661646e5a03f115156106e857fe5b50506040518051905090505b90565b60048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561078d5780601f106107625761010080835404028352916020019161078d565b820191906000526020600020905b81548152906001019060200180831161077057829003601f168201915b505050505081565b80600490805190602001906107ab929190610a5b565b505b50565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108465780601f1061081b57610100808354040283529160200191610846565b820191906000526020600020905b81548152906001019060200180831161082957829003601f168201915b505050505081565b8160039080519060200190610864929190610a5b565b50806005908051906020019061087b929190610a5b565b505b5050565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109175780601f106108ec57610100808354040283529160200191610917565b820191906000526020600020905b8154815290600101906020018083116108fa57829003601f168201915b505050505081565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109b55780601f1061098a576101008083540402835291602001916109b5565b820191906000526020600020905b81548152906001019060200180831161099857829003601f168201915b505050505081565b60028054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a535780601f10610a2857610100808354040283529160200191610a53565b820191906000526020600020905b815481529060010190602001808311610a3657829003601f168201915b505050505081565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610a9c57805160ff1916838001178555610aca565b82800160010185558215610aca579182015b82811115610ac9578251825591602001919060010190610aae565b5b509050610ad79190610adb565b5090565b610afd91905b80821115610af9576000816000905550600101610ae1565b5090565b905600a165627a7a72305820795036c9668d95a2091a1b79d1d9ae69cb0632db5c8c43a732a9a821bc14cb9d0029";

        string currContractAddr = string.Empty;

        public string SendTransaction(string script)
        {
            try
            {
                using (var client = new SshClient(hostUrl, 22, userName, pass))
                {
                    client.Connect();

                    string filename = Guid.NewGuid().ToString().Substring(0, 5);

                    Func<string, string> toFile = (str) =>
                    {
                        return "echo '" + str.Replace("'", @"'\''") + "' >> ~/eth_data/" + filename;
                    };

                    Func<string, string> toFile2 = (str) =>
                    {
                        return "echo '" + str.Replace("'", @"'\''") + "' >> ~/eth_data/ex" + filename;
                    };

                    SshCommand comm = null;

                    var lines = script.Split(new[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries);

                    foreach (var line in lines)
                    {
                        comm = client.RunCommand(toFile(line));
                    }

                    comm = client.RunCommand($"geth --exec 'loadScript(\"/home/{userName}/eth_data/{filename}\")' attach ipc:chains/devtest/geth.ipc");

                    client.Disconnect();

                    return comm.Result;
                }
            }
            catch (Exception e)
            {
                return e.Message;
            }
        }

        public string SendEth()
        {
            string cmd = $@"personal.unlockAccount('{acc1}', '1', 0);";
            var res = SendTransaction(cmd);
            cmd = "var tx = eth.sendTransaction({from: '" + acc1 + "', to: '"+ acc2 + "', gasPrice: '0x0000000000001', gasLimit: '0x00001', value: 1 }); " + Environment.NewLine;
            cmd = "console.log(tx);" + Environment.NewLine;
            return SendTransaction(cmd);
        }

        public void UnlockAccount()
        {
            string cmd = $@"personal.unlockAccount('{acc1}', '1', 0);";
            var res = SendTransaction(cmd);
        }

        public string CreateContract(string contract, string conditions)
        {
            UnlockAccount();

            var str =
            $@"var _tender = ""{contract}"";" + Environment.NewLine +
            $@"var _conditions = ""{conditions}"";" + Environment.NewLine +
            $@"var bankguaranteeContract = web3.eth.contract({guaranteeAbiDef});" + Environment.NewLine +
            $@"var bankguarantee = bankguaranteeContract.new(
                _tender,
                _conditions,
                {{
                    from: '{acc1}',
                    data: '{guaranteeByteCode}',
                gas: 3000000
               }}, function(e, contract){{
                console.log(e, contract);
                if (typeof contract.address != 'undefined') {{
                     console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
                }}
                }});" + Environment.NewLine;
            str += "console.log(bankguarantee);" + Environment.NewLine;
            currContractAddr = SendTransaction(str);
            return str;
        }
    }
}
